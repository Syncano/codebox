// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import proto "github.com/Syncano/codebox/pkg/filerepo/proto"

// RepoServer is an autogenerated mock type for the RepoServer type
type RepoServer struct {
	mock.Mock
}

// Exists provides a mock function with given fields: _a0, _a1
func (_m *RepoServer) Exists(_a0 context.Context, _a1 *proto.ExistsRequest) (*proto.ExistsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *proto.ExistsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *proto.ExistsRequest) *proto.ExistsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*proto.ExistsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *proto.ExistsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Upload provides a mock function with given fields: _a0
func (_m *RepoServer) Upload(_a0 proto.Repo_UploadServer) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(proto.Repo_UploadServer) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
