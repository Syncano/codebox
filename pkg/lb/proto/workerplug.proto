syntax = "proto3";
package lb;
option go_package = "github.com/Syncano/codebox/pkg/lb/proto";

service WorkerPlug {
  // ResourceRelease handles notifications sent by client whenever a run has finished.
  rpc ResourceRelease (ResourceReleaseRequest) returns (ResourceReleaseResponse);

  // ContainerRemoved handles notifications sent by client whenever a container gets removed from cache.
  rpc ContainerRemoved (ContainerRemovedRequest) returns (ContainerRemovedResponse);

  // Register is sent at the beginning by the worker.
  rpc Register (RegisterRequest) returns (RegisterResponse);

  // Heartbeat is meant to be called periodically by worker. If it's not sent for some time, worker will be removed.
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse);

  // Disconnect gracefully removes worker.
  rpc Disconnect (DisconnectRequest) returns (DisconnectResponse);
}

message ResourceReleaseRequest {
  string id = 1;
  uint32 mCPU = 2;
}
message ResourceReleaseResponse {}

message ContainerRemovedRequest {
  string id = 1;
  string containerID = 5;
  string sourceHash = 2;
  string environment = 3;
  string userID = 4;
}
message ContainerRemovedResponse {}

message RegisterRequest {
  string id = 1;
  uint32 port = 2;
  uint32 mCPU = 3;
  uint64 memory = 4;
  uint32 defaultMCPU = 5;
}
message RegisterResponse {}

message HeartbeatRequest {
  string id = 1;
  uint64 memory = 2;
}
message HeartbeatResponse {
}

message DisconnectRequest {
  string id = 1;
}
message DisconnectResponse {}
